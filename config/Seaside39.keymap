#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

/ {
    combos {
        compatible = "zmk,combos";

        lang2 {
            bindings = <&kp LANG2>;
            key-positions = <13 14>;
            layers = <0>;
        };

        lang1 {
            bindings = <&kp LANG1>;
            key-positions = <15 16>;
            layers = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
            layers = <0>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                &kp W      &kp E         &kp R             &kp T                                                        &kp Y        &kp U       &lt 5 I    &kp O    &lt 6 P
&kp A                &kp S      &kp D         &mt LCMD F        &kp G                                                        &kp H        &mt RCMD J  &kp K      &kp L    &kp SEMICOLON
&mt LEFT_SHIFT Z     &kp X      &kp C         &kp V             &kp B                                                        &kp N        &kp M       &kp COMMA  &kp DOT  &mt LEFT_SHIFT SLASH
&mt LEFT_GUI ESCAPE  &kp LCTRL  &kp LEFT_ALT  &mt LEFT_WIN TAB  &lt 1 SPACE  &lt 2 BACKSPACE      &mt RIGHT_SHIFT BACKSPACE  &lt 2 ENTER                                  &lt 5 MINUS
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM {
            bindings = <
&kp SLASH      &kp N7        &kp NUMBER_8  &kp NUMBER_9  &kp MINUS                         &trans      &trans    &trans  &trans     &trans
&kp ASTERISK   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS                          &kp LEFT    &kp DOWN  &kp UP  &kp RIGHT  &trans
&kp BACKSPACE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ENTER                         &trans      &trans    &trans  &trans     &trans
&trans         &trans        &trans        &trans        &trans     &trans      &kp COMMA  &kp PERIOD                               &trans
            >;
        };

        SYMBOL {
            bindings = <
&kp BACKSLASH  &kp EXCLAMATION  &kp AMPERSAND      &kp PIPE          &kp QUESTION                              &trans                 &kp EQUAL          &kp PLUS         &kp ASTERISK  &kp PERCENT
&kp HASH       &kp GRAVE        &kp DOUBLE_QUOTES  &kp SQT           &kp TILDE                                 &kp LEFT               &kp DOWN           &kp UP           &kp RIGHT     &kp DOLLAR
&trans         &trans           &kp LEFT_BRACE     &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS                      &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp AT        &kp CARET
&trans         &trans           &trans             &trans            &trans                &trans      &trans  &trans                                                                   &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &mkp MB4                &kp UP_ARROW    &mkp MB5                 &trans                       &kp LG(LEFT_ARROW)          &kp LA(LEFT_ARROW)      &kp UP_ARROW    &kp RA(RIGHT_ARROW)      &kp RG(RIGHT_ARROW)
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END                      &kp LC(LS(TAB))             &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp RC(TAB)
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans                       &kp LA(LG(LC(LEFT_ARROW)))  &kp LA(LG(LEFT_ARROW))  &kp LA(LG(F))   &kp RG(RA(RIGHT_ARROW))  &kp RA(RC(RG(RIGHT_ARROW)))
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &kp BACKSPACE                                                                                &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                             &trans            &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                                             &trans            &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                                             &trans            &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &kp LS(LG(N5))  &kp LS(LG(N4))      &kp LC(SPACE)  &kp LC(UP_ARROW)                          &trans
            >;
        };

        CONFIG {
            bindings = <
&bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &trans                            &trans       &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans                            &trans       &trans  &trans  &trans  &trans
&bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &bootloader  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans      &trans  &trans                               &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
